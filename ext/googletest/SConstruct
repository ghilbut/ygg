#-*- coding:utf-8 -*-

import os
import sys

BASEPATH = Dir('.').abspath



################################################################
##  set environment and get build options
################################################################

cpppath = [
  'googletest/googletest/include',
  'googletest/googletest',
  'googletest/googlemock/include',
  'googletest/googlemock',
]

env = Environment(CPPPATH=cpppath, CXXFLAGS='-std=c++11')
is_clean = env.GetOption('clean')

# don't clone or update from git repository when clean
if not is_clean:
  sys.path.append(os.path.dirname(BASEPATH))
  import utils
  url = 'https://github.com/google/googletest.git'
  utils.clone_or_update(url, BASEPATH)

  #if os.name == 'posix':
  #  env.Append(LINKFLAGS=['-pthread'])



################################################################
##  build static library
################################################################

sources = [
  'googletest/googletest/src/gtest-all.cc',
  'googletest/googlemock/src/gmock-all.cc',
]

# build static library
lib = env.StaticLibrary(target='gtest', source=sources)
env.Install('../include', ['googletest/googletest/include/gtest',
                           'googletest/googlemock/include/gmock'])
env.Install('../lib', lib)
env.Install('../src', 'googletest/googlemock/src/gmock_main.cc')
env.Alias('install', '../include')
env.Alias('install', '../lib')
env.Alias('install', '../src')
Default('install')

# "env.Alias('install', '../include')" is not work for clean.
# Because, it seems working only on files, not directory.
Clean(lib, ['../include/gtest',
            '../include/gmock'])
